(()=>{function o(){chrome.storage.local.set({booqsDictUserName:""}),chrome.storage.local.set({booqsDictIconUrl:""}),chrome.storage.local.set({booqsDictPublicUid:""}),chrome.storage.local.set({booqsDictToken:""})}chrome.action.onClicked.addListener((function(o){chrome.tabs.sendMessage(o.id,"Action")})),chrome.runtime.onMessage.addListener((function(o){switch(console.log("message"),o.action){case"openOptionsPage":console.log("openoption"),chrome.runtime.openOptionsPage()}})),chrome.runtime.onConnect.addListener((function(e){e.onMessage.addListener((function(t){"isLoggedIn"==t.action&&async function(e){const t=await new Promise((e=>{chrome.storage.local.get(["booqsDictToken"],(function(t){let n=t.booqsDictToken;if(console.log(n),n){console.log(n);let t="https://www.booqs.net/ja/api/v1/extension/is_logged_in?booqs_dict_token="+n,s={method:"POST",body:JSON.stringify({booqs_dict_token:n})};fetch(t,s).then((o=>o.json())).then((o=>{console.log(o),function(o){chrome.storage.local.set({booqsDictUserName:o.name}),chrome.storage.local.set({booqsDictIconUrl:o.icon_url}),chrome.storage.local.set({booqsDictPublicUid:o.public_uid}),chrome.storage.local.set({booqsDictToken:o.token})}(o.data),e("loggedIn")})).catch((t=>{console.log(t),o(),e("error")}))}else o(),e("blankToken")}))}));e.postMessage({state:t})}(e)}))}))})();